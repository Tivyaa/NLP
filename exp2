import random
import string

# Function to preprocess text
def preprocess_text(text):
    text = text.lower()
    text = text.translate(str.maketrans('', '', string.punctuation))
    return text

# Function to build a Markov Chain
def build_markov_chain(words):
    markov_chain = {}
    for i in range(len(words) - 1):
        current_word = words[i]
        next_word = words[i + 1]
        if current_word not in markov_chain:
          # Initialize as a list if not present
            markov_chain[current_word] = []
        markov_chain[current_word].append(next_word)
    return markov_chain

# Function to generate text using the Markov Chain
def generate_text(markov_chain, start_word, word_limit):
    current_word = start_word
    generated_words = [current_word]
    for _ in range(word_limit - 1):
        if current_word in markov_chain:
            next_word = random.choice(markov_chain[current_word])
            generated_words.append(next_word)
            current_word = next_word
        else:
            break
    return ' '.join(generated_words)

# Input Text
text_input = """
Artificial intelligence and natural language processing are changing the world.
This experiment demonstrates word generation using Markov Chains.
"""

# Preprocess and Tokenize
processed_text = preprocess_text(text_input)
words = processed_text.split()

# Build the Markov Chain
markov_chain = build_markov_chain(words)

# Generate text
start_word = random.choice(words)  # Random starting word
generated_text = generate_text(markov_chain, start_word, 10)

# Display Results
print("Generated Text:")
print(generated_text)
